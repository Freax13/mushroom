name: Build

on:
  push:
    branches:
      - "main"
    tags:
      - "*"
  pull_request:

jobs:
  check_formatting:
    name: "Check Formatting"
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v4
      - run: cargo fmt --all -- --check
        working-directory: common
      - run: cargo fmt --all -- --check
        working-directory: host
      - run: cargo fmt --all -- --check
        working-directory: tee

  build:
    strategy:
      matrix:
        profile:
          - development
          - production
          - kasan
          - profiling
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.profile }}
          workspaces: |
            common
            host
            tee
      - name: "Install cargo-make"
        run: cargo install cargo-make
      - name: "Build"
        run: cargo make --profile ${{ matrix.profile }} build
        working-directory: host

  clippy:
    name: "Clippy"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          key: clippy
          workspaces: |
            common
            host
            tee
      - name: "Check common"
        run: cargo clippy --workspace -- -D warnings
        working-directory: common
      - name: "Check host"
        run: cargo clippy --workspace -- -D warnings
        working-directory: host
      - name: "Check tee"
        run: cargo clippy --workspace --exclude init -- -D warnings
        working-directory: tee

  test-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          key: test
          workspaces: |
            common
            host
            tee
      - name: "Test"
        run: cargo test -p tests
        working-directory: tee

  test:
    strategy:
      matrix:
        profile:
          - development
          - production
          - kasan
        abi:
          - amd64
          - i386
    name: "Test"
    runs-on: [snp]
    steps:
      - uses: actions/checkout@v4
      - name: "Test"
        run: cargo make --profile ${{ matrix.profile }} test-${{ matrix.abi }}
        working-directory: host

  integration-test:
    name: "Integration Test"
    runs-on: [snp]
    steps:
      - uses: actions/checkout@v4
      - name: "Build GCC Docker Image"
        run: |
          docker build --output type=tar,dest=gcc.tar .
          gzip gcc.tar -f
        working-directory: tee/init
      - name: "Build Init Binary"
        run: cargo make --profile production build-init
        working-directory: tee
      # This tests that mushroom can do the build.
      - name: "Run"
        run: cargo make --profile production run run --init ../tee/target/x86_64-unknown-linux-musl/release/init --input ../tee/init/hello-world.c --output output.bin --attestation-report report.bin
        working-directory: host
      # This tests that mushroom can attest the build output.
      - name: "Verify Output"
        run: cargo make --profile production run verify --init ../tee/target/x86_64-unknown-linux-musl/release/init --input ../tee/init/hello-world.c --output output.bin --attestation-report report.bin
        working-directory: host
      # This tests that the build output is a working executable.
      - name: "Run Output"
        run: |
          chmod +x ./output.bin
          ./output.bin
        working-directory: host
